name: Build and Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      create_release:
        description: "Create a new release"
        required: false
        default: false
        type: boolean

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Intel Macs
            args: "--target x86_64-apple-darwin"
            target: "x86_64-apple-darwin"
          - platform: "macos-latest" # for Apple Silicon Macs
            args: "--target aarch64-apple-darwin"
            target: "aarch64-apple-darwin"
          - platform: "ubuntu-22.04"
            args: ""
            target: "x86_64-unknown-linux-gnu"
          - platform: "windows-latest"
            args: ""
            target: "x86_64-pc-windows-msvc"

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libjavascriptcoregtk-4.1-dev \
            libsoup-3.0-dev \
            libwebkit2gtk-4.1-dev

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install frontend dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Build Tauri application
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Disable code signing for now
          TAURI_SIGNING_PRIVATE_KEY: ""
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ""
        with:
          tagName: ${{ github.ref_name }}
          releaseName: "OddLauncher v__VERSION__"
          releaseBody: |
            See the assets below to download this version and install.

            **Installation on macOS:**
            - Download the appropriate .dmg file for your Mac
            - If you get a "damaged" warning, run: `xattr -d com.apple.quarantine ~/Downloads/oddlauncher*.dmg`
            - Then mount the .dmg and drag OddLauncher.app to Applications
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event.inputs.create_release == 'true'
    steps:
      - name: Create Release Summary
        run: |
          echo "## Release Assets" >> $GITHUB_STEP_SUMMARY
          echo "The following builds have been created:" >> $GITHUB_STEP_SUMMARY
          echo "- **macOS (Intel)**: oddlauncher_*_x64.dmg" >> $GITHUB_STEP_SUMMARY
          echo "- **macOS (Apple Silicon)**: oddlauncher_*_aarch64.dmg" >> $GITHUB_STEP_SUMMARY
          echo "- **Windows**: oddlauncher_*_x64_en-US.msi" >> $GITHUB_STEP_SUMMARY
          echo "- **Linux**: oddlauncher_*_amd64.deb, oddlauncher_*_amd64.AppImage" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Check the [Releases page](https://github.com/${{ github.repository }}/releases) for downloads." >> $GITHUB_STEP_SUMMARY
